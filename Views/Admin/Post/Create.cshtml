@model Blog.Models.Post

@{
    Layout = "~/Views/Shared/Admin/_Layout.cshtml";
    ViewBag.Title = "Create Post";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Create Category</h1>
            </div>

        </div>
    </div><!-- /.container-fluid -->
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        @Html.RouteLink("Back To List", "post.index", null, htmlAttributes: new { @class = "btn btn-primary" })
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("store", "Post", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <h4>Post</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CatId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.CatId, new SelectList(ViewBag.Categories, "Id", "Name"), "Select Category", htmlAttributes: new { @class = "form-control" })
                                        @*@Html.DropDownListFor(@model => model.categories,Model.categories)*@
                                        @Html.ValidationMessageFor(model => model.CatId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <input type="file" name="ImageFile" class="form-control" id="ImageFile" />
                                        @*@Html.TextBoxFor(model => model.ImageFile, htmlAttributes: new { @class = "control-label col-md-2", @type="file" })*@
                                        @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger", @id="validationTxt" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <button class="btn btn-primary" type="submit">Submit</button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts{
    <script type='text/jscript'>

        //get file size

        function GetFileSize(fileid) {

            try {

                var fileSize = 0;

                //for IE

                if ($.browser.msie) {

                    //before making an object of ActiveXObject,

                    //please make sure ActiveX is enabled in your IE browser

                    var objFSO = new ActiveXObject('Scripting.FileSystemObject'); var filePath = $('#' + fileid)[0].value;

                    var objFile = objFSO.getFile(filePath);

                    var fileSize = objFile.size; //size in kb

                    fileSize = fileSize / 1048576; //size in mb

                }

                //for FF, Safari, Opeara and Others

                else {

                    fileSize = $('#' + fileid)[0].files[0].size //size in kb

                    fileSize = fileSize / 1048576; //size in mb

                }



                return fileSize;

            }

            catch (e) {

                alert('Error is :' + e);

            }

        }



        //get file path from client system

        function getNameFromPath(strFilepath) {

            var objRE = new RegExp(/([^\/\\]+)$/);

            var strName = objRE.exec(strFilepath);



            if (strName == null) {

                return null;

            }

            else {

                return strName[0];

            }

        }



        $(function () {

            $('#ImageFile').change(function () {
                console.log("Hie")
                var file = getNameFromPath($(this).val());

                if (file != null) {

                    var extension = file.substr((file.lastIndexOf('.') + 1));

                    switch (extension) {

                        case 'jpg':

                        case 'png':

                        case 'gif':

                            flag = true;

                            break;

                        default:

                            flag = false;

                    }

                }

                if (flag == false) {

                    $('#validationTxt').text('You can upload only jpg,png,gif extension file');

                    return false;

                }

                else {

                    var size = GetFileSize('file');

                    if (size > 3) {

                        $('#validationTxt').text('You can upload file up to 1 MB');

                    }

                    else {

                        $('#validationTxt').text('');

                    }

                }

            });

        });

    </script>
}


